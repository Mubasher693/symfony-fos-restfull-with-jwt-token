; https://xdebug.org/docs/all_settings
;   only enable profiler if the GET/POST parameter or cookie named XDEBUG_PROFILE is set to 'PHPSTORM'
zend_extension=xdebug.so
xdebug.profiler_append=0
xdebug.profiler_enable=0
xdebug.profiler_enable_trigger=1
xdebug.profiler_enable_trigger_value=PHPSTORM
xdebug.profiler_output_name=cachegrind.out.%t.%p
xdebug.profiler_output_dir=/tmp/xdebug/profiler
;   only enable trace if the GET/POST parameter or cookie named XDEBUG_TRACE is set to 'PHPSTORM'
xdebug.trace_options=0
xdebug.auto_trace=0
xdebug.trace_enable_trigger=1
xdebug.trace_enable_trigger_value=PHPSTORM
xdebug.trace_format=0
xdebug.trace_output_name=trace.%t.%p
xdebug.trace_output_dir=/tmp/xdebug/trace
;   disable stack traces for errors and exceptions
xdebug.show_error_trace=0
xdebug.show_exception_trace=0
;   disable statistics for garbage collection
xdebug.gc_stats_enable=0
xdebug.gc_stats_output_name=gcstats.%t.%p
xdebug.gc_stats_output_dir=/tmp/xdebug/garbageCollection
;   disable internal structures which allow code coverage
xdebug.coverage_enable=0
;   do not generate stack dumps in error situations which show all variables in the top-most scope
xdebug.show_local_vars=0
;   do not gather information about which variables are used in a certain scope
xdebug.collect_vars=0
;   hide notices, warnings and errors
xdebug.scream=0
;   show stack traces by default on error
xdebug.default_enable=1
;   disable the limitation on the number of array children and object's properties when shown
xdebug.var_display_max_children=-1
;   disable the limitation on the number of nested levels of array elements and object properties when shown
xdebug.var_display_max_depth=-1
;   disable the limitation on the maximum string length when shown
xdebug.var_display_max_data=-1
;   color var_dumps and stack traces output when in CLI mode and when the output is a tty
xdebug.cli_color=1
;   break at the beginning of the script
xdebug.stopOnEntry=1
;   pass on the IDE Key of 'PHPSTORM' to the DBGp debugger handler
xdebug.idekey=PHPSTORM
;   try to contact a debug client which is listening on the host and port set below
xdebug.mode=debug
;   always attempt to start a remote debugging session and try to connect to a client, even if the GET/POST/COOKIE variable is not present
xdebug.start_with_request=yes
;   do not try to connect to the client that made the HTTP request
xdebug.remote_connect_back=0
;   only support the DBGp protocol
xdebug.remote_handler=dbgp
;   try to connect to the debug client as soon as the script starts
xdebug.remote_mode=req
xdebug.remote_cookie_expire_time=36000
xdebug.log=/tmp/debug.log
xdebug.remote_log_level=3
xdebug.remote_timeout=200
xdebug.client_port=9090
xdebug.client_host=host.docker.internal



